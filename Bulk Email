import argparse
import getpass
import smtplib
import ssl
import os
from email.message import EmailMessage
from email.utils import formataddr
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

def create_message(sender_email: str,
                   sender_name: str,
                   receiver_emails: str ,
                   email_subject: str,
                   email_body: str,
                   is_html: bool = False) -> EmailMessage:
    msg = MIMEMultipart()
    msg["Subject"] = email_subject
    msg["From"] = formataddr((f"{sender_name}", f"{sender_email}"))
    msg["BCC"] = sender_email

    if is_html:
        msg.attach(MIMEText(email_body, "html"))
    else:
        msg.attach(MIMEText(email_body, "plain"))

    return msg

def send_email(sender_email: str,
               sender_name: str,
               password:str,
               receiver_emails: str ,
               email_subject: str,
               email_body: str,
               is_html: bool = False) -> None:
    msg = create_message(sender_email, sender_name, receiver_emails, email_subject, email_body, is_html)

    smtp_port = 587
    smtp_server = "smtp.gmail.com"

    ssl_context = ssl.create_default_context()

    try:
        my_server = smtplib.SMTP(smtp_server, smtp_port)
        my_server.starttls(context=ssl_context)
        my_server.login(sender_email, password)

        for receiver in receiver_emails:
            msg["To"] = receiver
            my_server.sendmail(sender_email, receiver, msg.as_string())
            print(f"Successfully sent to: {receiver}")
    except Exception as e:
        print(f"ERROR: {e}")
    finally:
        my_server.quit()

parser = argparse.ArgumentParser(description="Send an email using Gmail.")
parser.add_argument("sender_email", help="Sender's email address.")
parser.add_argument("sender_name", help="Sender's name.")
parser.add_argument("password", help="Sender's email password.")
parser.add_argument("receiver_emails", nargs="+", help="List of receiver's email addresses.")
parser.add_argument("--subject", default="No subject", help="Email subject.")
parser.add_argument("--body", help="Email body.")
parser.add_argument("--html", action="store_true", help="Use HTML format for the email body.")

args = parser.parse_args()

if not args.body:
    args.body = input("Enter the email body: ")

password = getpass.getpass(f"Enter password for {args.sender_email}: ")

send_email(args.sender_email, args.sender_name, password, args.receiver_emails, args.subject, args.body, args.html)
